---
# Check if VM exists
- name: "{{ vm.name }} :: VM storage location "
  file:
    state: directory
    path: /virt/vms/{{ vm.name }}

- name: "{{ vm.name }} :: copy-on-write image"
  stat:
    path: /virt/vms/{{ vm.name }}/{{ vm.name }}.qcow2
    get_checksum: false
  register: vm_stat

# Manage cloud image
- name: qemu images directory
  file:
    state: directory
    path: /virt/images

- name: Check Ubuntu cloud image
  uri:
    url: https://cloud-images.ubuntu.com/bionic/current/bionic-server-cloudimg-amd64.img
    method: HEAD
  register: cloudimg_http_stat
  check_mode: false

- name: Check local cloud image
  stat:
    path: /virt/images/bionic-server-cloudimg-amd64.img
    get_checksum: false
  register: cloudimg_local_stat

- name: Update Ubuntu cloud image
  get_url:
    url: https://cloud-images.ubuntu.com/bionic/current/bionic-server-cloudimg-amd64.img
    dest: /virt/images/bionic-server-cloudimg-amd64.img
  when: not cloudimg_local_stat.stat.exists or
        cloudimg_local_stat.stat.size != cloudimg_http_stat.content_length
  register: cloudimg_local_updated

# VM Directory
- name: Virtual machine directory
  file:
    path: /virt/vms
    state: directory
    owner: root
    group: root
    mode: 0755

# Configure and launch VM
- name: "Copy image to vm dir"
  copy:
    src: /virt/images/bionic-server-cloudimg-amd64.img
    dest: /virt/vms/{{ vm.name }}/{{vm.name}}.img
    remote_src: true
  when: vm_stat.stat.exists == false

- name: "Cloud-config file"
  template:
    src: templates/cloud-config.yml.j2
    dest: /virt/vms/{{ vm.name }}/cloud-config.yml
  when: vm_stat.stat.exists == false

- name: "cloud-config image "
  shell:
    cloud-localds /virt/vms/{{ vm.name }}/cloud-config.img /virt/vms/{{ vm.name }}/cloud-config.yml
  when: vm_stat.stat.exists == false

# Generate kick-off
- name: "Generate vm xml"
  template:
    src: templates/vm.yml.j2
    dest: /virt/vms/{{ vm.name }}/vm.yml
  when: vm_stat.stat.exists == false


- name: "{{ vm.name }} :: Create virtual machine "
  shell:
    virsh create /virt/vms/{{ vm.name }}/vm.yml
  when: vm_stat.stat.exists == false

- name: "Copy private key"
  copy:
    src: vm_key
    dest: "/home/ubuntu/.ssh/vm_key"
    mode: 0600
